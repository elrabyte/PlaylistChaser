@using PlaylistChaser.Web.Models.ViewModel;
@using static PlaylistChaser.Web.Util.BuiltInIds;
@model PlaylistViewModel
@{
    ViewData["Title"] = "Details";
}

<script type="text/javascript">
    function syncSongsThumbnail(source) {
        disableButtonRow();
        disableButton($("#syncSongsThumbnailBtn"));
        let url = "/Playlist/SyncSongsThumbnail/@Model.PlaylistId";
        $.ajax({
            type: "POST",
            url: url,
            data: { source: source, onlyWithNoThumbnails: true },
            success: function (data) {
                if (data.message) {
                    enableButtonRow();
                    enableButton($("#syncPlaylistToBtn"));
                    return alert(data.message)
                }
                location.reload();
            },
            dataType: "json"
        });
    }
    function syncPlaylistFrom(source) {
        disableButtonRow();
        disableButton($("#syncPlaylistFromBtn"));
        let url = "/Playlist/SyncPlaylistFrom/@Model.PlaylistId";
        $.ajax({
            type: "POST",
            url: url,
            data: { source: source },
            success: function (data) {
                if (!data.success) {
                    enableButtonRow();
                    enableButton($("#syncPlaylistToBtn"));
                    return alert(data.message)
                }
                location.reload();
            },
            dataType: "json"
        });
    }
    function syncPlaylistTo(source) {
        disableButtonRow();
        disableButton($("#syncPlaylistToBtn"));
        let url = "/Playlist/SyncPlaylistTo/@Model.PlaylistId";
        $.ajax({
            type: "POST",
            url: url,
            data: { source: source },
            success: function (data) {
                if (!data.success) {
                    enableButtonRow();
                    enableButton($("#syncPlaylistToBtn"));
                    return alert(data.message)
                }
                location.reload();
            },
            dataType: "json"
        });
    }

    function disableButtonRow() {
        $("#btn-header-row .btn").addClass("disabled");
    }

    function enableButtonRow() {
        $("#btn-header-row .btn").removeClass("disabled");
    }

    function disableButton(btn) {
        $(btn).addClass("disabled");
        btn.append('<div class="loading-spinner spinner-border ml-auto" role="status" aria-hidden="true"></div>');
    }
    function enableButton(btn) {
        btn.removeClass("disabled");
        btn.find(".loading-spinner").remove();
    }
</script>

<h4>Playlist</h4>
<div class="row">
    <div class="col-md-6">
        <div class="form-group row">
            @Html.LabelFor(m => m.Name)
            @Html.DisplayFor(m => m.Name)
        </div>
        <div class="form-group row">
            @Html.LabelFor(m => m.Description)
            @Html.DisplayFor(m => m.Description)
        </div>

        <div id="btn-header-row" class="btn-group btn-group-lg" role="group" aria-label="Control group">
            <a id="syncPlaylistFromBtn" href="javascript:;" onclick="syncPlaylistFrom('@Sources.Youtube')" class="btn btn-primary">
                Sync Playlist From (Youtube)
            </a>
            @if (Model.PlaylistTypeId == PLaylistTypes.Combined) //TODO: switch to a ownership check, isMine
            {
                <a id="syncPlaylistToBtn" href="javascript:;" onclick="syncPlaylistTo('@Sources.Youtube')" class="btn btn-primary">
                    Sync Playlist To (Youtube)
                </a>
            }
            <a id="syncPlaylistToBtn" href="javascript:;" onclick="syncPlaylistTo('@Sources.Spotify')" class="btn btn-primary">
                Sync Playlist To (Spotify)
            </a>
            <a id="syncSongsThumbnailBtn" href="javascript:;" onclick="syncSongsThumbnail('@Sources.Youtube')" class="btn btn-primary">
                Sync Songs-Thumbnail From (Youtube)
            </a>
            <a asp-action="Edit_Delete" asp-route-id="@Model.PlaylistId" class="btn btn-danger">
                <i class="bi bi-trash-fill"></i> Delete playlist
            </a>
        </div>
    </div>
</div>
<div class="row">
    <div class="col">
        <h5>Songs</h5>
        <table class="table">
            <colgroup>
                <col sytle="width:25%" />
                <col sytle="width:25%" />
                <col sytle="width:25%" />
                <col sytle="width:13%" />
                <col sytle="width:12%" />
            </colgroup>
            <thead>
                <tr>
                    <th></th>
                    <th>
                        @Html.DisplayNameFor(m => m.Songs.First().SongName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(m => m.Songs.First().ArtistName)
                    </th>
                    <th>@Html.DisplayNameFor(m => m.Songs.First().PlaylistSongStates)</th>
                    <th>@Html.DisplayNameFor(m => m.Songs.First().SongStates)</th>
                </tr>
                <tr>
                    <td>
                        @Model.Songs.Count
                    </td>
                    <td colspan="4">&nbsp;</td>
                </tr>
            </thead>
            <tbody>

                @foreach (var song in Model.Songs)
                {

                    <tr>
                        <td>
                            <img src="/Playlist/GetThumbnail?thumbnailId=@song.ThumbnailId">
                        </td>
                        <td>
                            @Html.DisplayFor(m => song.SongName)
                        </td>
                        <td>
                            @Html.DisplayFor(m => song.ArtistName)
                        </td>
                        <td>
                            @foreach (var state in song.PlaylistSongStates)
                            {
                                <div>@(state.SourceId.ToString() + ": " + state.StateId.ToString())</div>
                            }
                        </td>
                        <td>
                            @foreach (var state in song.SongStates)
                            {
                                <div>@(state.SourceId.ToString() + ": " + state.StateId.ToString())</div>
                            }
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td>
                        @Model.Songs.Count
                    </td>
                    <td colspan="4">&nbsp;</td>
                </tr>
            </tfoot>
        </table>
    </div>
</div>