@using PlaylistChaser.Web.Models.SearchModel;
@using PlaylistChaser.Web.Util;
@using static PlaylistChaser.Web.Util.BuiltInIds;
@model PlaylistDetailsModel
@{
    ViewData["Title"] = "Details";
    var sources = (List<Source>)ViewBag.Sources;
}

<script type="text/javascript">
    function syncSongsThumbnail(source) {
        let url = "/Playlist/SyncSongsThumbnail/@Model.Playlist.Id";
        let btn = $("#syncSongsThumbnailBtn");
        ajaxCall(url, btn, source);
    }
    function syncPlaylistFrom(source) {
        let url = "/Playlist/SyncPlaylistFrom/@Model.Playlist.Id";
        let btn = $("#syncPlaylistFromBtn");
        ajaxCall(url, btn, source);
    }
    function syncPlaylistTo(source) {
        let url = "/Playlist/SyncPlaylistTo/@Model.Playlist.Id";
        let btn = $("#syncPlaylistToBtn");
        ajaxCall(url, btn, source);
    }
    function deletePlaylistAtSource(source) {
        let url = "/Playlist/DeletePlaylistAtSource/@Model.Playlist.Id";
        let btn = $("#deletePlaylistAtSourceBtn");
        ajaxCall(url, btn, source);
    }
    function deletePlaylistLocal() {
        let url = "/Playlist/DeletePlaylistLocal/@Model.Playlist.Id";
        let btn = $("#deletePlaylistLocalBtn");
        ajaxCall(url, btn, null, function () { window.location.replace("/Playlist") });
    }

    function ajaxCall(url, btn, source, onSuccessFunc) {
        if (url == null || btn == null)
            return popupHelper.showError("url or button not set");

        disableButtonRow();
        disableButton(btn);

        $.ajax({
            type: "POST",
            url: url,
            data: { source: source },
            success: function (data) {
                if (!data.success) {
                    enableButtonRow();
                    enableButton(btn);
                    debugger;
                    return popupHelper.showError(data.message);
                }
                if (typeof onSuccessFunc === 'undefined')
                    location.reload();
                else
                    onSuccessFunc();
            },
            dataType: "json"
        });
    }

    function disableButtonRow() {
        $("#btn-header-row .btn").addClass("disabled");
    }

    function enableButtonRow() {
        $("#btn-header-row .btn").removeClass("disabled");
    }

    function disableButton(btn) {
        $(btn).addClass("disabled");
        btn.append('<div class="loading-spinner spinner-border ml-auto" role="status" aria-hidden="true"></div>');
    }
    function enableButton(btn) {
        btn.removeClass("disabled");
        btn.find(".loading-spinner").remove();
    }
</script>

<div class="container">
    <div class="row">
        <!--Buttons-->
        <div id="btn-header-row" class="btn-group" role="group" style="white-space:nowrap">
            <!--Sync Playlist-->
            @{
                var actionText = "Sync Playlist";
            }
            <button type="button" class="btn btn-primary d-none d-sm-block" onclick="syncPlaylistFrom('@Model.Playlist.MainSourceId')">
                <i class="bi bi-cloud-download"></i> @(actionText)
            </button>
            <button type="button" class="btn btn-primary d-block d-sm-none" onclick="syncPlaylistFrom('@Model.Playlist.MainSourceId')" title="@(actionText)">
                <i class="bi bi-cloud-download"></i>
            </button>

            <!--Sync Playlist To-->
            @{
                actionText = "Sync Playlist To";
            }
            <button id="btnGroupSync" type="button" class="btn btn-primary dropdown-toggle d-none d-sm-block" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="bi bi-cloud-upload"></i> @(actionText)
            </button>
            <button id="btnGroupSync" type="button" class="btn btn-primary dropdown-toggle d-block d-sm-none" data-bs-toggle="dropdown" aria-expanded="false" title="@(actionText)">
                <i class="bi bi-cloud-upload"></i>
            </button>
            <div class="dropdown-menu dropdown-menu-end" aria-labelledby="btnGroupSync">
                @foreach (var source in sources)
                {
                    <a class="dropdown-item" href="javascript:;" onclick="syncPlaylistTo('@source.Id')">@Html.Raw(source.IconHtml) @source.Name</a>
                }
            </div>
            <!--Sync Songs-Thumbnail From-->
            @{
                actionText = "Sync Songs-Thumbnail From";
            }
            <button id="btnGroupSync" type="button" class="btn btn-secondary dropdown-toggle d-none d-md-block" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="bi bi-file-arrow-down"></i> @(actionText)
            </button>
            <button id="btnGroupSync" type="button" class="btn btn-secondary dropdown-toggle d-block d-md-none" data-bs-toggle="dropdown" aria-expanded="false" title="@(actionText)">
                <i class="bi bi-file-arrow-down"></i>
            </button>
            <div class="dropdown-menu dropdown-menu-end" aria-labelledby="btnGroupSync">
                @foreach (var source in sources)
                {
                    <a class="dropdown-item" href="javascript:;" onclick="syncSongsThumbnail('@source.Id')">@Html.Raw(source.IconHtml) @source.Name</a>
                }
            </div>
            <!--Delete Playlist-->
            @{
                actionText = "Delete Playlist";
            }
            <button id="btnGroupDelete" type="button" class="btn btn-danger dropdown-toggle d-none d-md-block" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="bi bi-trash"></i> @(actionText)
            </button>
            <button id="btnGroupDelete" type="button" class="btn btn-danger dropdown-toggle d-block d-md-none" data-bs-toggle="dropdown" aria-expanded="false" title="@(actionText)">
                <i class="bi bi-trash"></i>
            </button>
            <div class="dropdown-menu dropdown-menu-end" aria-labelledby="btnGroupDelete">
                <a id="deletePlaylistLocalBtn" class="dropdown-item" href="javascript:;" onclick="deletePlaylistLocal()">Delete Playlist Local</a>
                <hr class="dropdown-divider">
                @foreach (var source in sources)
                {
                    <a class="dropdown-item" href="javascript:;" onclick="deletePlaylistAtSource('@source.Id')">@Html.Raw(source.IconHtml) @source.Name</a>
                }
            </div>
        </div>
    </div>

    <div class="d-flex flex-row">
        <h4>Playlist</h4>
        @Controls.Button("Edit","editPlaylist()",iconName:"pencil-square", cssClass:"")
    </div>

    <div class="row">
        @Partials.ReloadablePartial("detailsPartial",Url.Url("_DetailsPartial","Playlist", new { playlistId = Model.Playlist.Id }), true)
    </div>

    <div class="row">
        @Partials.ReloadablePartial("playlistInfosDetailsPartial",Url.Url("_PlaylistInfosDetailsPartial","Playlist", new { playlistId = Model.Playlist.Id }), true)
    </div>

    <hr />
    <div class="row">
        @Partials.ReloadablePartial("playlistSongsStatesSummary",Url.Url("_PlaylistSongStatesSummaryPartial", "Playlist", new { id = Model.Playlist.Id }), true)
    </div>
    <div class="row">
        @Partials.ReloadablePartial("songsStatesSummary",Url.Url("_SongStatesSummaryPartial", "Song", new { playlistId = Model.Playlist.Id }), true)
    </div>
    <div class="row">
        @Partials.ReloadablePartial("playlistSongsGridPartial",Url.Url("_PlaylistSongsGridPartial","Song", new { playlistId = Model.Playlist.Id, addSongStates = Model.AddSongStates }),true)
    </div>

</div>

@Partials.ModalPartial("playlistEdit", "Edit Playlist", Url.Url("_EditPartial", "Playlist", new { id = Model.Playlist.Id }))


<script type="text/javascript">
    playlistEdit.on("saved", function () {
        location.reload();
    })

    function editPlaylist() {
        playlistEdit.show();
    }


    function removeDuplicatesFromPlaylist(source) {
        let url = '@Url.Url("RemoveDuplicatesFromPlaylist", "Playlist", new {playlistId = Model.Playlist.Id})'
        $.post(url, { source: source }, function (data, status, jqXHR) {
            location.reload();
        });
    }
</script>
