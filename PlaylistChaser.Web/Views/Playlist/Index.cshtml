@using PlaylistChaser.Web.Models.SearchModel;
@using static PlaylistChaser.Web.Util.BuiltInIds;
@using PlaylistChaser.Web.Util;

@model PlaylistIndexModel
@{
    ViewData["Title"] = "Home Page";
    var sources = (List<Source>)ViewBag.Sources;
}

<!-- Custom Site CSS -->
<link rel="stylesheet" href="~/css/card.css" asp-append-version="true" />
<!-- END -->
@Partials.ModalBareBonePartial("addSimplePlaylistPartial", Url.Url( "_AddSimplePlaylistPartial", "Playlist"))
@Partials.ModalBareBonePartial("addCombinedPlaylistPartial", Url.Url( "_AddCombinedPlaylistPartial", "Playlist"))

<div class="container  mt-4">
    <div class="row">
        <div id="btn-header-row" class="btn-group" role="group" style="white-space:nowrap">
            <!--Add Simple Playlist-->
            @{
                var actionText = "Add Simple Playlist";
            }
            <a id="addSimplePlaylistBtn" class="btn btn-primary dropdown-toggle d-none d-sm-block" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="bi bi-plus-circle"></i> @actionText
            </a>
            <a id="addSimplePlaylistBtn" class="btn btn-primary dropdown-toggle d-block d-sm-none" data-bs-toggle="dropdown" aria-expanded="false" title="@(actionText)">
                <i class="bi bi-plus-circle"></i>
            </a>
            <ul class="dropdown-menu dropdown-menu-end">
                <li><a class="dropdown-item" href="javascript:;" onclick="addSimplePlaylistPartial.show('?source=@Sources.Youtube')"><i class="bi bi-youtube"></i> Youtube</a></li>
                <li><a class="dropdown-item" href="javascript:;" onclick="addSimplePlaylistPartial.show('?source=@Sources.Spotify')"><i class="bi bi-spotify"></i> Spotify</a></li>
            </ul>
            <!--Add Combined Playlist-->
            @{
                actionText = "Add Combined Playlist";
            }
            <a id="select-mode-btn" class="btn btn-secondary d-none d-md-block">
                <i class="bi bi-grid-fill"></i> @actionText
            </a>
            <a id="select-mode-btn" class="btn btn-secondary d-block d-md-none" title="@actionText">
                <i class="bi bi-grid-fill"></i>
            </a>

            <!--Sync Playlists-->
            @{
                actionText = "Sync Playlists";
            }
            <a id="syncPlaylistsBtn" class="btn btn-secondary d-none d-md-block" href="javascript:;" onclick="syncPlaylists()">
                <i class="bi bi-cloud-download"></i> @actionText
            </a>
            <a id="syncPlaylistsBtn" class="btn btn-secondary d-block d-md-none" href="javascript:;" onclick="syncPlaylists()" title="@actionText">
                <i class="bi bi-cloud-download"></i>
            </a>

            <!--Sync all Playlist Thumbnails-->
            @{
                actionText = "Sync Thumbnails";
            }
            <a id="syncPlaylistThumbnailsBtn" class="btn btn-tertiary d-none d-lg-block" href="javascript:;" onclick="syncPlaylistThumbnailsFrom()">
                <i class="bi bi-file-image"></i> @actionText
            </a>
            <a id="syncPlaylistThumbnailsBtn" class="btn btn-tertiary d-block d-lg-none" href="javascript:;" onclick="syncPlaylistThumbnailsFrom()" title="@actionText">
                <i class="bi bi-file-image"></i>
            </a>



        </div>
        <!--combine mode-->
        <div id="combine-mode-section" class="btn-group" role="group" style="white-space:nowrap">
            <a id="exit-select-mode-btn" class="btn btn-danger d-none">
                <i class="bi bi-x-square btn-icon"></i> Exit Combine Mode
            </a>
            <a id="accept-select-btn" class="btn btn-success d-none" href="javascript:;" onclick="addCombinedPlaylistPartial.show()">
                <i class="bi bi-check-square btn-icon"></i> Combine Selection
            </a>
        </div>
    </div>
</div>

<div class="container mt-4">
    <section class="hero-section mt-4">
        <div class="card-grid">
            @foreach (var playlist in Model.Playlists)
            {
                var pl_card_classes = "";
                switch (playlist.PlaylistTypeId)
                {
                    case PLaylistTypes.Simple:
                        pl_card_classes += " playlisttype-simple";
                        break;
                    case PLaylistTypes.Combined:
                        pl_card_classes += " playlisttype-combined";
                        break;
                    default:
                        break;
                }

                <a class="pl_card @(pl_card_classes)" asp-action="Details" asp-route-id="@playlist.Id" data-pl-id="@playlist.Id">
                    <div class="card__background" style="background-image: url('/Playlist/GetThumbnail?thumbnailId=@playlist.ThumbnailId')"></div>
                    <div class="card__content">
                        <h5 class="card_subHeading">@(playlist.ChannelName) @Html.Raw(playlist.PlaylistTypeId == PLaylistTypes.Combined ? "<i class=\"bi bi-grid-fill\" style=\"float: right;\"></i>" : "")</h5>
                        <h4 class="card_heading">@(playlist.Name)</h4>
                        <footer class="card__footer">
                            @foreach (var source in sources)
                            {
                                var info = playlist.Infos.SingleOrDefault(i => (int)i.SourceId == source.Id);
                                if (info != null)
                                {
                                    var isMine = info.IsMine;
                                    var isMainSource = info.SourceId == playlist.MainSourceId;
                                    var sourceRowClasses = "";
                                    if (isMainSource)
                                        sourceRowClasses += " mainsource";

                                    <div class="row source @(sourceRowClasses)">
                                        <div class="col-2" style="@($"color:#{source.ColorHex};")" title="@source.Name.ToString()">
                                            @Html.Raw(source.IconHtml)
                                        </div>
                                        <div class="col-4">
                                            <div class="d-flex flex-row justify-content-between">
                                                <div id="isMainSourceDiv" title="is main source">
                                                    <i class="bi bi-bookmark-star-fill @(isMainSource ? "" : "inactiveIcon")"></i>
                                                </div>
                                                <div id="isMineDiv" title="playlist is mine">
                                                    <i class="bi bi-person-fill @(isMine ? "" : "inactiveIcon")"></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                        </footer>
                    </div>
                </a>
            }
        </div>
    </section>
</div>

<!-- Custom Site JS -->
<script type="text/javascript">
    $(document).ready(function () {
        let selectMode = false;
        $(".pl_card").click(function (event) {
            if (selectMode) {
                // Prevent the default click behavior (navigating to another page)
                event.preventDefault();
                $(this).toggleClass("selected");
            }
        });
        $("#select-mode-btn").click(function () {
            enterSelectMode();
        });
        $("#exit-select-mode-btn").click(function () {
            exitSelectMode();
        });

        function enterSelectMode() {
            selectMode = true;
            $("#exit-select-mode-btn").removeClass('d-none')
            $("#accept-select-btn").removeClass('d-none')
            hideMainButtons();
        }
        function exitSelectMode() {
            selectMode = false;
            $("#exit-select-mode-btn").addClass('d-none')
            $("#accept-select-btn").addClass('d-none')
            showMainButtons();
            // Clear any selected cards when exiting select mode
            $(".pl_card.selected").removeClass("selected");
        }
    });

    function showMainButtons() {
        $("#btn-header-row").show();
    }
    function hideMainButtons() {
        $("#btn-header-row").hide();
    }

    function getSelectedPlaylistIds() {
        var selectedIds = [];
        $(".pl_card.selected").each(function () {
            var playlistId = $(this).data("pl-id");
            selectedIds.push(playlistId);
        });
        return selectedIds;
    }

    function syncPlaylistThumbnailsFrom(source) {
        let url = "/Playlist/SyncPlaylistThumbnailsFrom/";
        $.ajax({
            type: "POST",
            url: url,
            data: { source: source },
            success: function (data) {
                if (!data.success)
                    return popupHelper.showError(data.message)
                else if (data.message)
                    return popupHelper.showError(data.message)
                location.reload();
            },
            dataType: "json"
        });
    }

    function syncPlaylists() {
        let url = "/Playlist/SyncPlaylistsFrom/";
        $.ajax({
            type: "POST",
            url: url,
            success: function (data) {
                if (!data.success)
                    return popupHelper.showError(data.message)
                else if (data.message)
                    return popupHelper.showError(data.message)
                location.reload();
            },
            dataType: "json"
        });
    }

    //auth
    $(document).ready(function () {
        loginToSpotify();
        loginToYoutube();
    })

    function loginToSpotify() {
        let url = "/Login/LoginToSpotify/";
        $.ajax({
            type: "POST",
            url: url,
            success: function (data) {
                if (!data.success)
                    return popupHelper.showError(data.message)
                else if (data.url)
                    return window.location.replace(data.url);
            },
            dataType: "json"
        });
    }

    function loginToYoutube() {
        let url = "/Login/LoginToYoutube/";
        $.ajax({
            type: "POST",
            url: url,
            success: function (data) {
                if (!data.success)
                    return popupHelper.showError(data.message)
                else if (data.url)
                    return window.location.replace(data.url);
            },
            dataType: "json"
        });
    }
</script>
<!-- END -->
