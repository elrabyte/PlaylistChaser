@using PlaylistChaser.Web.Models.SearchModel;
@using static PlaylistChaser.Web.Util.BuiltInIds;
@using PlaylistChaser.Web.Util;

@model PlaylistIndexModel
@{
    ViewData["Title"] = "Home Page";
    var sources = (List<Source>)ViewBag.Sources;
}

<!-- Custom Site CSS -->
<link rel="stylesheet" href="~/css/card.css" asp-append-version="true" />
<!-- END -->
@Helper.ModalBareBonePartial("addSimplePlaylistPartial","Add Simple Plalyist", Helper.Url(Url, "_AddSimplePlaylistPartial", "Playlist", null))
@Helper.ModalBareBonePartial("addCombinedPlaylistPartial","Add Combined Plalyist", Helper.Url(Url, "_AddCombinedPlaylistPartial", "Playlist", null))

<div class="container mt-4">
    <div class="row">
        <div class="btn-group btn-group-lg" role="group" aria-label="Control group">
            <!--Add Simple Playlist-->
            <a id="addSimplePlaylistBtn" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="bi bi-plus-circle btn-icon"></i>Add Simple Playlist
            </a>
            <ul class="dropdown-menu dropdown-menu-end">
                <li><a class="dropdown-item" href="javascript:;" onclick="addSimplePlaylistPartial.show('?source=@Sources.Youtube')"><i class="bi bi-youtube"></i> Youtube</a></li>
                <li><a class="dropdown-item" href="javascript:;" onclick="addSimplePlaylistPartial.show('?source=@Sources.Spotify')"><i class="bi bi-spotify"></i> Spotify</a></li>
            </ul>
            <!--Add Combined Playlist-->
            <a id="select-mode-btn" class="btn btn-secondary">
                <i class="bi bi-grid-fill btn-icon"></i> Add Combined Playlist
            </a>
            <a id="exit-select-mode-btn" class="btn btn-danger d-none">
                <i class="bi bi-x-square btn-icon"></i> Exit Combine Mode
            </a>
            <a id="accept-select-btn" class="btn btn-success d-none" href="javascript:;" onclick="addCombinedPlaylistPartial.show()">
                <i class="bi bi-check-square btn-icon"></i> Combine Selection
            </a>
            <!--Sync all Playlist Thumbnails-->
            <a id="syncPlaylistThumbnailsBtn" href="javascript:;" onclick="syncPlaylistThumbnailsFrom('@Sources.Youtube')"
               class="btn btn-tertiary"
               data-bs-toggle="tooltip"
               data-bs-title="Sync all Playlist Thumbnails">
                <i class="bi bi-file-image btn-icon"></i> Sync Thumbnails
            </a>
        </div>
    </div>
</div>

<div class="container mt-4">
    <section class="hero-section mt-4">
        <div class="card-grid">
            @foreach (var playlist in Model.Playlists)
            {
                <a class="pl_card" asp-action="Details" asp-route-id="@playlist.Id" data-pl-id="@playlist.Id">
                    <div class="card__background" style="background-image: url('/Playlist/GetThumbnail?thumbnailId=@playlist.ThumbnailId')"></div>
                    <div class="card__content">
                        <p class="card__category">@(playlist.ChannelName)</p>
                        <h3 class="card__heading">@(playlist.Name)</h3>
                        <footer class="card__footer">
                            @foreach (var source in sources)
                            {
                                var info = playlist.Infos.SingleOrDefault(i => (int)i.SourceId == source.Id);
                                if (info != null)
                                {
                                    <div class="row @(info.SourceId == playlist.MainSourceId ? "mainsource" : "")">
                                        <div class="col-5">
                                            @Html.Raw(source.IconHtml) @info.SourceId.ToString()
                                        </div>
                                        @if (info.IsMine)
                                        {
                                            <div class="col">
                                                <i class="bi bi-person-fill"></i>
                                            </div>
                                        }
                                    </div>
                                }
                            }
                        </footer>
                    </div>
                </a>
            }
        </div>
    </section>
</div>

<!-- Custom Site JS -->
<script type="text/javascript">
    $(document).ready(function () {
        let selectMode = false;
        $(".pl_card").click(function (event) {
            if (selectMode) {
                // Prevent the default click behavior (navigating to another page)
                event.preventDefault();
                $(this).toggleClass("selected");
            }
        });
        $("#select-mode-btn").click(function () {
            enterSelectMode();
        });
        $("#exit-select-mode-btn").click(function () {
            exitSelectMode();
        });

        function enterSelectMode() {
            selectMode = true;
            $("#exit-select-mode-btn").removeClass('d-none')
            $("#accept-select-btn").removeClass('d-none')
            hideMainButtons();
        }
        function exitSelectMode() {
            selectMode = false;
            $("#exit-select-mode-btn").addClass('d-none')
            $("#accept-select-btn").addClass('d-none')
            showMainButtons();
            // Clear any selected cards when exiting select mode
            $(".pl_card.selected").removeClass("selected");
        }
    });

    function showMainButtons() {
        $("#addSimplePlaylistBtn").removeClass('d-none')
        $("#select-mode-btn").removeClass('d-none')
        $("#syncPlaylistThumbnailsBtn").removeClass('d-none')
    }
    function hideMainButtons() {
        $("#addSimplePlaylistBtn").addClass('d-none')
        $("#select-mode-btn").addClass('d-none')
        $("#syncPlaylistThumbnailsBtn").addClass('d-none')
    }

    function getSelectedPlaylistIds() {
        var selectedIds = [];
        $(".pl_card.selected").each(function () {
            var playlistId = $(this).data("pl-id");
            selectedIds.push(playlistId);
        });
        return selectedIds;
    }

    function syncPlaylistThumbnailsFrom(source) {
        let url = "/Playlist/SyncPlaylistThumbnailsFrom/";
        $.ajax({
            type: "POST",
            url: url,
            data: { source: source },
            success: function (data) {
                if (!data.success)
                    return alert(data.message)
                else if (data.message)
                    return alert(data.message)
                location.reload();
            },
            dataType: "json"
        });
    }

    //auth
    $(document).ready(function () {
        loginToSpotify();
        loginToYoutube();
    })

    function loginToSpotify() {
        let url = "/Login/LoginToSpotify/";
        $.ajax({
            type: "POST",
            url: url,
            success: function (data) {
                if (!data.success)
                    return alert(data.message)
                else if (data.url)
                    return window.location.replace(data.url);
            },
            dataType: "json"
        });
    }

    function loginToYoutube() {
        let url = "/Login/LoginToYoutube/";
        $.ajax({
            type: "POST",
            url: url,
            success: function (data) {
                if (!data.success)
                    return alert(data.message)
                else if (data.url)
                    return window.location.replace(data.url);
            },
            dataType: "json"
        });
    }
</script>
<!-- END -->
