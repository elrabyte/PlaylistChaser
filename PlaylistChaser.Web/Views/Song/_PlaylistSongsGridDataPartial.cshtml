@using PlaylistChaser.Web.Models.ViewModel;
@using PlaylistChaser.Web.Util;
@using static PlaylistChaser.Web.Util.BuiltInIds;
@model List<PlaylistSongViewModel>
@{
    var sources = (List<Source>)ViewBag.FilteredSources;
}

<table id="playlistSongsGrid"
       class="table"
       data-toggle="table"
       data-checkbox-header="true"
       data-multiple-select-row="true"
       data-click-to-select="true"
       data-height="800">
    <thead>
        <tr>
            <th rowspan="2" data-checkbox="true"></th>
            <th rowspan="2" data-sortable="true">@Html.DisplayNameFor(m => m.First().SongName)</th>
            <th rowspan="2" data-sortable="true">@Html.DisplayNameFor(m => m.First().ArtistName)</th>
            @if (ViewBag.AddSongStates)
            {
                foreach (var source in sources)
                {
                    <th colspan="2">@Html.Raw(source.DisplayName)</th>
                }
            }
        </tr>
        <tr>
            @if (ViewBag.AddSongStates)
            {
                foreach (var source in sources)
                {
                    <th data-filter-control="select" data-sortable="true">@("Playlist song state")</th>
                    <th data-filter-control="select" data-sortable="true">@("Song state")</th>
                }
            }
        </tr>
    </thead>
    <tbody>

        @foreach (var song in Model)
        {
            <tr data-id="@song.SongId">
                <td></td>
                <td>
                    @Html.DisplayFor(m => song.SongName)
                </td>
                <td>
                    @Html.DisplayFor(m => song.ArtistName)
                </td>
                @if (ViewBag.AddSongStates)
                {
                    @foreach (var source in sources)
                    {
                        <td>
                            @{
                                var playlistSongState = song.PlaylistSongStates.SingleOrDefault(ss => ss.SourceId == (Sources)source.Id);
                                if (playlistSongState != null)
                                {
                                    @(playlistSongState.StateId.ToString())
                                }
                            }
                        </td>
                        <td>
                            @{
                                var state = song.SongStates.SingleOrDefault(ss => ss.SourceId == (Sources)source.Id);
                                if (state != null)
                                {
                                    @(state.StateId.ToString())
                                }
                            }
                        </td>
                    }
                }
            </tr>
        }
    </tbody>
</table>
<nav aria-label="Page navigation example">
    <ul class="pagination">
        <li class="page-item">
            <a class="page-link" href="javascript:;" onclick="changePage(pageNumber-1)" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>
        @for (int i = 1; i <= ViewBag.NumPages; i++)
        {
            <li id="page@(i)Btn" class="page-btn page-item"><a class="page-link" href="javascript:;" onclick="changePage(@(i))">@(i)</a></li>
        }
        <li class="page-item">
            <a class="page-link" href="javascript:;" onclick="changePage(pageNumber+1)" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    </ul>
</nav>
<script type="text/javascript">
    $(function () {
        $("table").bootstrapTable();
    })
    $('table').on('dbl-click-row.bs.table', function (row, element, field) {
        playlistSongsGrid_dblCliked(row, element, field);
    })
</script>
