@using PlaylistChaser.Web.Models.SearchModel;
@using PlaylistChaser.Web.Models.ViewModel;
@using PlaylistChaser.Web.Util;
@using static PlaylistChaser.Web.Util.BuiltInIds;
@model PlaylistSongSearchModel



<div class="col-12">
    <form id="searchForm">
        <div class="form-group">
            @Html.BsLabelFor(m => m.SongName)
            @Html.BsTextBoxFor(m => m.SongName)
        </div>
        <div class="form-group">
            @Html.BsLabelFor(m => m.ArtistName)
            @Html.BsTextBoxFor(m => m.ArtistName)
        </div>
        <div class="form-group">
            @Html.BsLabelFor(m => m.Source)
            @Html.BsTextBoxFor(m => m.Source)
        </div>
        <div class="form-group">
            @Html.BsLabelFor(m => m.SongState)
            @Html.BsTextBoxFor(m => m.SongState)
        </div>
        <div class="form-group">
            @Controls.Button("search", "searchSongs()")
        </div>
    </form>
</div>

@Helper.ReloadablePartial("songsGrid", Url.Url("_PlaylistSongsGridDataPartial", "Song", new { PlaylistId = Model.PlaylistId}))

<script type="text/javascript">

    $(function () {
        changePage(1);
    })
    var addSongStates = @(ViewBag.AddSongStates.ToString().ToLower());
    var pageSize = @(ViewBag.PageSize);

    var pageNumber;
    function changePage(pageNum) {
        pageNumber = pageNum;
        let skip = pageSize * (pageNumber - 1);
        loadSongsGrid(addSongStates, skip, pageSize);
        //change active buttons
        $(".page-btn").removeClass("active");
        $("#page" + pageNum + "Btn").addClass("active");
    }

    function loadSongsGrid(addSongStates, skip, limit, searchModel) {
        songsGrid.load("&addSongStates=" + addSongStates + "&skip=" + skip + "&limit=" + limit + "&seachModel=" + searchModel);
    }

    function searchSongs() {
        let skip = pageSize * (pageNumber - 1);
        loadSongsGrid(addSongStates, skip, pageSize, $("#searchForm").serialize());
    }
</script>
