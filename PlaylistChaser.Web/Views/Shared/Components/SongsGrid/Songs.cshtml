@using PlaylistChaser.Web.Models.ViewModel;
@model List<SongViewModel>

<table class="table"
       data-toggle="table"
       data-search="true"
       data-filter-control="true"
       data-show-search-clear-button="true"
       data-height="800">
    <thead>
        <tr>
            <th data-sortable="true">@Html.DisplayNameFor(m => m.First().SongName)</th>
            <th data-sortable="true">@Html.DisplayNameFor(m => m.First().ArtistName)</th>
            @if (ViewBag.AddSongStates)
            {
                <th data-filter-control="select" data-sortable="true">@Html.DisplayNameFor(m => m.First().SongStates)</th>
            }
        </tr>
        <tr>
            <td>
                @Model
            </td>
            <td>&nbsp;</td>
            @if (ViewBag.AddSongStates)
            {
                <td>&nbsp;</td>
            }
        </tr>
    </thead>
    <tbody>

        @foreach (var song in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(m => song.SongName)
                </td>
                <td>
                    @Html.DisplayFor(m => song.ArtistName)
                </td>
                @if (ViewBag.AddSongStates)
                {
                    <td>
                        @foreach (var state in song.SongStates)
                        {
                            <div>
                                @Html.Raw(state.IconHtml)@(" " + state.SourceId.ToString() + ": " + state.StateId.ToString())
                            </div>
                        }
                    </td>
                }
            </tr>
        }
    </tbody>
    <tfoot>
        <tr>
            <td>
                @Model
            </td>
            <td>&nbsp;</td>
            @if (ViewBag.AddSongStates)
            {
                <td>&nbsp;</td>
            }
        </tr>
    </tfoot>
</table>